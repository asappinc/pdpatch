# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
macrosGeneric:
  - &dockerhubCredentials
    username: $DOCKERHUB_USER
    password: $DOCKERHUB_PASSWORD
jobs:
  test:
    docker:
      - image: asappinc/python-38-ci
        auth: *dockerhubCredentials  

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate          
            pip install nbdev jupyter
            pip install -e .


      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            nbdev_read_nbs
            nbdev_test_nbs
            python3.8 setup.py sdist bdist_wheel

  publish:
    docker:
      - image: asappinc/python-38-ci
        auth: *dockerhubCredentials
    steps:
      - checkout
      - run: python3.8 setup.py sdist bdist_wheel
      - run: twine upload --repository-url $PYPI_URL dist/*
workflows:
  version: 2
  build:
    jobs:
      - test:
          context: asapp-build-standard
          filters:
            tags:
              only:
                - /.*/
      - publish:
          context: asapp-build-standard
          requires:
            - test
          filters:
            tags:
              only:
                - /.*/
            branches:
              ignore:
                - /.*/