# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/pdpatch/',
                'doc_host': 'https://asappinc.github.io',
                'git_url': 'https://github.com/asappinc/pdpatch/tree/main/',
                'lib_path': 'pdpatch'},
  'syms': { 'pdpatch.all': {},
            'pdpatch.case': { 'pdpatch.case.PxLabeler': ('case.html#pxlabeler', 'pdpatch/case.py'),
                              'pdpatch.case.PxLabeler.__getitem__': ('case.html#pxlabeler.__getitem__', 'pdpatch/case.py'),
                              'pdpatch.case.PxLabeler.__init__': ('case.html#pxlabeler.__init__', 'pdpatch/case.py'),
                              'pdpatch.case.PxLabeler.__setitem__': ('case.html#pxlabeler.__setitem__', 'pdpatch/case.py'),
                              'pdpatch.case.PxLabeler.__str__': ('case.html#pxlabeler.__str__', 'pdpatch/case.py'),
                              'pdpatch.case.PxLabeler.copy': ('case.html#pxlabeler.copy', 'pdpatch/case.py'),
                              'pdpatch.case.PxLabeler.get': ('case.html#pxlabeler.get', 'pdpatch/case.py'),
                              'pdpatch.case.if_instance': ('case.html#if_instance', 'pdpatch/case.py'),
                              'pdpatch.case.pd.DataFrame.rename2words': ('case.html#pd.dataframe.rename2words', 'pdpatch/case.py'),
                              'pdpatch.case.replace_acronyms': ('case.html#replace_acronyms', 'pdpatch/case.py'),
                              'pdpatch.case.replace_parentheses': ('case.html#replace_parentheses', 'pdpatch/case.py'),
                              'pdpatch.case.snake2words': ('case.html#snake2words', 'pdpatch/case.py'),
                              'pdpatch.case.snake2words_replace_acronyms': ('case.html#snake2words_replace_acronyms', 'pdpatch/case.py'),
                              'pdpatch.case.snake2words_replace_acronyms_if_str': ( 'case.html#snake2words_replace_acronyms_if_str',
                                                                                    'pdpatch/case.py')},
            'pdpatch.core': { 'pdpatch.core.L.page': ('core.html#l.page', 'pdpatch/core.py'),
                              'pdpatch.core.dummydf': ('core.html#dummydf', 'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.c2back': ('core.html#pd.dataframe.c2back', 'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.c2front': ('core.html#pd.dataframe.c2front', 'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.crosstab': ('core.html#pd.dataframe.crosstab', 'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.len': ('core.html#pd.dataframe.len', 'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.page': ('core.html#pd.dataframe.page', 'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.renamec': ('core.html#pd.dataframe.renamec', 'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.reorderc': ('core.html#pd.dataframe.reorderc', 'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.repetition_counts': ( 'core.html#pd.dataframe.repetition_counts',
                                                                               'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.repetitions': ('core.html#pd.dataframe.repetitions', 'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.single_events': ('core.html#pd.dataframe.single_events', 'pdpatch/core.py'),
                              'pdpatch.core.pd.DataFrame.sort': ('core.html#pd.dataframe.sort', 'pdpatch/core.py'),
                              'pdpatch.core.pd.Index.l': ('core.html#pd.index.l', 'pdpatch/core.py'),
                              'pdpatch.core.pd.Series.len': ('core.html#pd.series.len', 'pdpatch/core.py'),
                              'pdpatch.core.pd.Series.mapk': ('core.html#pd.series.mapk', 'pdpatch/core.py'),
                              'pdpatch.core.pd.Series.minmax': ('core.html#pd.series.minmax', 'pdpatch/core.py'),
                              'pdpatch.core.pd.Series.notin': ('core.html#pd.series.notin', 'pdpatch/core.py'),
                              'pdpatch.core.pd.Series.page': ('core.html#pd.series.page', 'pdpatch/core.py')},
            'pdpatch.display': { 'pdpatch.display.L.less': ('display.html#l.less', 'pdpatch/display.py'),
                                 'pdpatch.display.Less': ('display.html#less', 'pdpatch/display.py'),
                                 'pdpatch.display.Less.__init__': ('display.html#less.__init__', 'pdpatch/display.py'),
                                 'pdpatch.display.Less._ipython_display_': ('display.html#less._ipython_display_', 'pdpatch/display.py'),
                                 'pdpatch.display.Less.refresh': ('display.html#less.refresh', 'pdpatch/display.py'),
                                 'pdpatch.display.Walker': ('display.html#walker', 'pdpatch/display.py'),
                                 'pdpatch.display.Walker.__init__': ('display.html#walker.__init__', 'pdpatch/display.py'),
                                 'pdpatch.display.Walker._head': ('display.html#walker._head', 'pdpatch/display.py'),
                                 'pdpatch.display.Walker._next': ('display.html#walker._next', 'pdpatch/display.py'),
                                 'pdpatch.display.Walker._prev': ('display.html#walker._prev', 'pdpatch/display.py'),
                                 'pdpatch.display.pd.DataFrame.less': ('display.html#pd.dataframe.less', 'pdpatch/display.py'),
                                 'pdpatch.display.pd.DataFrame.title': ('display.html#pd.dataframe.title', 'pdpatch/display.py'),
                                 'pdpatch.display.pd.DataFrame.to_percent': ('display.html#pd.dataframe.to_percent', 'pdpatch/display.py'),
                                 'pdpatch.display.pd.Series.less': ('display.html#pd.series.less', 'pdpatch/display.py')},
            'pdpatch.express': { 'pdpatch.express.Express': ('express.html#express', 'pdpatch/express.py'),
                                 'pdpatch.express.Express.__getattr__': ('express.html#express.__getattr__', 'pdpatch/express.py'),
                                 'pdpatch.express.Figure.__add__': ('express.html#figure.__add__', 'pdpatch/express.py'),
                                 'pdpatch.express.Figure.__or__': ('express.html#figure.__or__', 'pdpatch/express.py'),
                                 'pdpatch.express.Figure.__truediv__': ('express.html#figure.__truediv__', 'pdpatch/express.py'),
                                 'pdpatch.express.set_template': ('express.html#set_template', 'pdpatch/express.py'),
                                 'pdpatch.express.update_legend_and_yaxis': ('express.html#update_legend_and_yaxis', 'pdpatch/express.py')},
            'pdpatch.seaborn': { 'pdpatch.seaborn.Seaborn': ('seaborn.html#seaborn', 'pdpatch/seaborn.py'),
                                 'pdpatch.seaborn.Seaborn.__getattr__': ('seaborn.html#seaborn.__getattr__', 'pdpatch/seaborn.py'),
                                 'pdpatch.seaborn.renamer': ('seaborn.html#renamer', 'pdpatch/seaborn.py')},
            'pdpatch.transformer': { 'pdpatch.transformer.DataFrameTransformer': ( 'transformer.html#dataframetransformer',
                                                                                   'pdpatch/transformer.py'),
                                     'pdpatch.transformer.DataFrameTransformer.__init__': ( 'transformer.html#dataframetransformer.__init__',
                                                                                            'pdpatch/transformer.py'),
                                     'pdpatch.transformer.DataFrameTransformer.after_fit': ( 'transformer.html#dataframetransformer.after_fit',
                                                                                             'pdpatch/transformer.py'),
                                     'pdpatch.transformer.DataFrameTransformer.after_transform': ( 'transformer.html#dataframetransformer.after_transform',
                                                                                                   'pdpatch/transformer.py'),
                                     'pdpatch.transformer.DataFrameTransformer.before_fit': ( 'transformer.html#dataframetransformer.before_fit',
                                                                                              'pdpatch/transformer.py'),
                                     'pdpatch.transformer.DataFrameTransformer.fit': ( 'transformer.html#dataframetransformer.fit',
                                                                                       'pdpatch/transformer.py'),
                                     'pdpatch.transformer.DataFrameTransformer.fit_transform': ( 'transformer.html#dataframetransformer.fit_transform',
                                                                                                 'pdpatch/transformer.py'),
                                     'pdpatch.transformer.DataFrameTransformer.transform': ( 'transformer.html#dataframetransformer.transform',
                                                                                             'pdpatch/transformer.py')}}}
